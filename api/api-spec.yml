openapi: 3.0.0
info:
  title: E-Library API
  description: API documentation for the e-library project.
  version: 1.0.0
servers:
  - url: http://127.0.0.1:8080
    description: Development server
  - url: https://api-neocourse.dewanto.dev
    description: Production server

paths:
  /auth/register:
    post:
      summary: Register a new user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  example: yourpassword
                email:
                  type: string
                  example: johndoe@example.com
      responses:
        "201":
          description: User registered successfully
        "400":
          description: Invalid input

  /auth/login:
    post:
      summary: Login a user
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  example: yourpassword
      responses:
        "200":
          description: User logged in successfully, JWT token set in cookies
        "401":
          description: Invalid credentials

  /auth/logout:
    post:
      summary: Logout the user (optional)
      operationId: logoutUser
      responses:
        "200":
          description: User logged out successfully

  /books/borrow:
    post:
      summary: Borrow a book
      operationId: borrowBook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookId:
                  type: integer
                  example: 1
      responses:
        "200":
          description: Book borrowed successfully
        "404":
          description: Book not found

  /books/store:
    post:
      summary: Return a borrowed book
      operationId: returnBook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookId:
                  type: integer
                  example: 1
      responses:
        "200":
          description: Book returned successfully
        "404":
          description: Book not found

  /books/borrowed:
    get:
      summary: View borrowed books
      operationId: viewBorrowedBooks
      responses:
        "200":
          description: List of borrowed books
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    bookId:
                      type: integer
                    title:
                      type: string
                    borrowDate:
                      type: string
                      format: date
      security:
        - bearerAuth: []

  /books:
    get:
      summary: Get all books
      operationId: getAllBooks
      responses:
        "200":
          description: List of all books
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    bookId:
                      type: integer
                    title:
                      type: string
                    author:
                      type: string
                    year:
                      type: integer
                    publisher:
                      type: string

  /books/search:
    get:
      summary: Search books by filters
      operationId: searchBooks
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Book name
        - in: query
          name: year
          schema:
            type: integer
          description: Publication year
        - in: query
          name: publisher
          schema:
            type: string
          description: Book publisher
      responses:
        "200":
          description: Search results for books
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    bookId:
                      type: integer
                    title:
                      type: string
                    author:
                      type: string
                    year:
                      type: integer
                    publisher:
                      type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
